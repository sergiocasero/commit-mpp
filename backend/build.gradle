buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.com.heroku.sdk:heroku-gradle:1.0.4"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.4"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: "com.heroku.sdk.heroku-gradle"
apply plugin: "com.github.johnrengelman.shadow"

group 'com.sergiocasero'
version '0.0.4'
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"

    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"

    implementation 'org.jetbrains.exposed:exposed:0.16.1'
    implementation "com.h2database:h2:1.4.199"

    implementation project(":common")

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

heroku {
    appName = "commitconf"
    processTypes(
            web: "java -jar backend/build/libs/backend-" + version + ".jar"
    )
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
}

shadowJar {
    mergeServiceFiles()
}

deployHeroku.dependsOn("shadowJar")
